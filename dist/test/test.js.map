{"version":3,"sources":["test.js"],"names":["Object","defineProperty","exports","value","chai_1","require","lib_1","describe","it","expect","Function","partial","to","not","be","an","a","add","lhs","rhs","eq","fn","zero","args","have","members","undefined","self","key","bind","deep","inc","dec"],"mappings":"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","file":"test.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* tslint:disable:trailing-comma no-console */\nconst chai_1 = require(\"chai\");\nconst lib_1 = require(\"../lib\");\nrequire(\"mocha\");\ndescribe(\"Function.partial\", () => {\n    it(\"should exist\", () => {\n        chai_1.expect(Function.partial).to.not.be.an(\"undefined\");\n    });\n    it(\"should be a function\", () => {\n        chai_1.expect(Function.partial).to.be.a(\"function\");\n    });\n});\ndescribe(\"partial\", () => {\n    it(\"should exist\", () => {\n        chai_1.expect(lib_1.partial).to.not.be.an(\"undefined\");\n    });\n    it(\"should be a function\", () => {\n        chai_1.expect(lib_1.partial).to.be.a(\"function\");\n    });\n});\ndescribe(\"partial\", () => {\n    const add = (lhs, rhs) => {\n        return lhs + rhs;\n    };\n    it(\"should return a function\", () => {\n        chai_1.expect(lib_1.partial(add, { lhs: 1 })).to.be.a(\"function\");\n    });\n    it(\"should bind 1st argument\", () => {\n        chai_1.expect(lib_1.partial(add, { lhs: +1 })(0)).to.eq(+1);\n    });\n    it(\"should bind 2nd argument\", () => {\n        chai_1.expect(lib_1.partial(add, { rhs: -1 })(0)).to.eq(-1);\n    });\n    it(\"should bind all arguments\", () => {\n        chai_1.expect(lib_1.partial(add, { lhs: +1, rhs: -1 })()).to.eq(0);\n    });\n    it(\"should bind all arguments out of order\", () => {\n        chai_1.expect(lib_1.partial(add, { rhs: -1, lhs: +1 })()).to.eq(0);\n    });\n});\ndescribe(\"partial\", () => {\n    it(\"should preserve unbound `this` correctly\", () => {\n        const fn = function (zero) {\n            chai_1.expect(zero).to.eq(0);\n            return this;\n        };\n        const args = {\n            zero: 0\n        };\n        chai_1.expect([\n            lib_1.partial(fn, args)()\n        ]).to.have.members([\n            undefined\n        ]);\n    });\n    it(\"should preserve bounded `this` correctly\", () => {\n        const fn = function (zero) {\n            chai_1.expect(zero).to.eq(0);\n            return this;\n        };\n        const args = {\n            zero: 0\n        };\n        const self = {\n            key: 1\n        };\n        chai_1.expect([\n            lib_1.partial(fn, args).bind(self)()\n        ]).to.have.deep.members([\n            self\n        ]);\n    });\n});\ndescribe(\"partial\", () => {\n    const add = (lhs, rhs) => {\n        return lhs + rhs;\n    };\n    it(\"should be chainable\", () => {\n        const inc = lib_1.partial(add, { lhs: +1 });\n        chai_1.expect(lib_1.partial(inc, { rhs: -1 })()).to.eq(0);\n        const dec = lib_1.partial(add, { rhs: -1 });\n        chai_1.expect(lib_1.partial(dec, { lhs: +1 })()).to.eq(0);\n    });\n});\n"]}